from conan import ConanFile
from conan.errors import ConanInvalidConfiguration
from conan.tools.build import check_min_cppstd
from conan.tools.cmake import CMakeDeps, CMakeToolchain, cmake_layout
from conan.tools.scm import Version
import os

required_conan_version = ">=1.50.2 <1.51.0 || >=1.51.2"


class QcustomplotConan(ConanFile):
    name = "qcustomplot"
    description = "QCustomPlot is a Qt C++ widget for plotting and data visualization."
    license = "GPL-3.0-only"
    topics = ("qcustomplot", "qt", "chart", "plot", "data-visualization")
    homepage = "https://www.qcustomplot.com"
    url = "https://github.com/conan-io/conan-center-index"

    settings = "os", "arch", "compiler", "build_type"
    options = {
        "shared": [True, False],
        "fPIC": [True, False],
        "with_opengl": [True, False],
    }
    default_options = {
        "shared": False,
        "fPIC": True,
        "with_opengl": False,
    }

    def config_options(self):
        if self.settings.os == "Windows":
            del self.options.fPIC

    def configure(self):
        if self.options.shared:
            del self.options.fPIC
        # FIXME: we shouldn't have to force shared in qt, but config file
        #        generated by conan in qt static is likely broken, or maybe env vars.
        self.options["qt"].shared = True

    def requirements(self):
        if Version(self.version) >= "2.0.0":
            self.requires("qt/2.0")
        else:
            self.requires("qt/1.0")
        if self.options.with_opengl and self.settings.os == "Windows":
            self.requires("opengl/system")

    def validate(self):
        if self.info.settings.compiler.cppstd:
            min_cppstd = "11" if Version(self.dependencies["qt"].ref.version) < "6.0.0" else "17"
            check_min_cppstd(self, min_cppstd)
        if not (self.dependencies["qt"].options.gui and self.dependencies["qt"].options.widgets):
            raise ConanInvalidConfiguration("qcustomplot requires qt gui and widgets")
        if self.info.options.with_opengl and self.dependencies["qt"].options.opengl == "no":
            raise ConanInvalidConfiguration("qcustomplot with opengl requires Qt with opengl enabled")

    def layout(self):
        cmake_layout(self, src_folder="src")


    def generate(self):
        tc = CMakeToolchain(self)
        tc.variables["QCUSTOMPLOT_SRC_DIR"] = self.source_folder.replace("\\", "/")
        tc.variables["QCUSTOMPLOT_VERSION"] = self.version
        tc.variables["QCUSTOMPLOT_VERSION_MAJOR"] = str(Version(self.version).major)
        tc.variables["QT_VERSION"] = self.dependencies["qt"].ref.version
        tc.variables["QCUSTOMPLOT_USE_OPENGL"] = self.options.with_opengl
        tc.generate()
        deps = CMakeDeps(self)
        deps.generate()

    def package_info(self):
        postfix = "d" if self.settings.build_type == "Debug" else ""
        self.cpp_info.libs = [f"qcustomplot{postfix}"]
        self.cpp_info.requires = ["qt::qtCore", "qt::qtGui", "qt::qtWidgets", "qt::qtPrintSupport"]
        if self.options.shared:
            self.cpp_info.defines.append("QCUSTOMPLOT_USE_LIBRARY")
        if self.options.with_opengl:
            self.cpp_info.defines.append("QCUSTOMPLOT_USE_OPENGL")
            if self.settings.os == "Windows":
                self.cpp_info.requires.append("opengl::opengl")